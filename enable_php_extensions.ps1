# OpenEMR PHP Extension Enabler Script
# Generated by GitHub Copilot

Write-Host "OpenEMR PHP Extension Enabler" -ForegroundColor Green
Write-Host "================================" -ForegroundColor Green

$phpIniPath = "C:\tools\php82\php.ini"

if (-not (Test-Path $phpIniPath)) {
    Write-Host "ERROR: PHP ini file not found at $phpIniPath" -ForegroundColor Red
    Write-Host "Please check your PHP installation path." -ForegroundColor Yellow
    Read-Host "Press Enter to exit"
    exit 1
}

Write-Host "Found PHP ini file: $phpIniPath" -ForegroundColor Green

# Backup the original php.ini
$backupPath = "$phpIniPath.backup.$(Get-Date -Format 'yyyyMMdd-HHmmss')"
Write-Host "Creating backup: $backupPath" -ForegroundColor Yellow
Copy-Item $phpIniPath $backupPath

# Read the current php.ini content
$content = Get-Content $phpIniPath

Write-Host "Enabling required extensions..." -ForegroundColor Green

# Extensions to enable
$extensionsToEnable = @(
    "mysqli",
    "pdo_mysql", 
    "openssl",
    "curl",
    "gd",
    "mbstring",
    "zip"
)

$modified = $false
$newContent = @()

foreach ($line in $content) {
    $newLine = $line
    
    # Check if this line contains a commented extension we need
    foreach ($ext in $extensionsToEnable) {
        if ($line -match "^\s*;extension=$ext\s*$") {
            $newLine = "extension=$ext"
            Write-Host "  Enabled: $ext" -ForegroundColor Green
            $modified = $true
            break
        }
    }
    
    $newContent += $newLine
}

if ($modified) {
    # Write the modified content back to php.ini
    $newContent | Set-Content $phpIniPath
    Write-Host ""
    Write-Host "PHP extensions have been enabled successfully!" -ForegroundColor Green
    
    Write-Host ""
    Write-Host "Next steps:" -ForegroundColor Yellow
    Write-Host "1. Restart your web server" -ForegroundColor White
    Write-Host "2. Test the OpenEMR database connection again" -ForegroundColor White
    Write-Host "3. If using a web server, restart it to load the new PHP configuration" -ForegroundColor White
    
} else {
    Write-Host ""
    Write-Host "No extensions were modified. They may already be enabled or have different formatting." -ForegroundColor Yellow
    Write-Host "You may need to manually edit the php.ini file." -ForegroundColor Yellow
}

Write-Host ""
Write-Host "Extension status check:" -ForegroundColor Cyan
$extensions = @("mysqli", "pdo_mysql", "openssl", "curl", "gd", "mbstring", "zip")
foreach ($ext in $extensions) {
    $checkResult = php -m | Select-String -Pattern "^$ext$"
    if ($checkResult) {
        Write-Host "  $ext - Loaded" -ForegroundColor Green
    } else {
        Write-Host "  $ext - Not loaded" -ForegroundColor Red
    }
}

Write-Host ""
Write-Host "Backup created at: $backupPath" -ForegroundColor Cyan
Read-Host "Press Enter to continue"